{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://text2sim.com/schemas/des-simpy-model.json",
  "title": "SimPy-Compatible Discrete-Event Simulation Model Configuration",
  "description": "Practical DES configuration optimized for SimPy's native capabilities",
  "type": "object",
  "required": ["run_time"],
  "properties": {
    "run_time": {
      "type": "number",
      "description": "Total simulation runtime (in time units)",
      "minimum": 0.1,
      "examples": [480, 1440, 8760]
    },
    "num_entities": {
      "type": "integer",
      "description": "Total number of entities to generate (alternative to arrival_pattern)",
      "minimum": 1,
      "examples": [100, 500, 1000]
    },
    "entity_types": {
      "type": "object",
      "description": "Different types of entities with their characteristics",
      "patternProperties": {
        "^[a-zA-Z][a-zA-Z0-9_]*$": {
          "type": "object",
          "required": ["probability"],
          "properties": {
            "probability": {
              "type": "number",
              "minimum": 0,
              "maximum": 1,
              "description": "Probability of this entity type (must sum to 1.0 across all types)"
            },
            "value": {
              "type": "object",
              "description": "Value range for this entity type",
              "properties": {
                "min": {"type": "number", "minimum": 0},
                "max": {"type": "number", "minimum": 0}
              },
              "required": ["min", "max"]
            },
            "priority": {
              "type": "integer",
              "minimum": 1,
              "maximum": 10,
              "default": 5,
              "description": "Priority level (1=highest, 10=lowest) - SimPy native support"
            },
            "attributes": {
              "type": "object",
              "description": "Custom attributes for conditional routing",
              "patternProperties": {
                "^[a-zA-Z][a-zA-Z0-9_]*$": {
                  "oneOf": [
                    {"type": "string"},
                    {"type": "number"},
                    {"type": "boolean"}
                  ]
                }
              }
            }
          },
          "additionalProperties": false
        }
      },
      "examples": [
        {
          "regular_customer": {"probability": 0.7, "value": {"min": 10, "max": 50}, "priority": 5},
          "vip_customer": {"probability": 0.3, "value": {"min": 50, "max": 200}, "priority": 2}
        }
      ]
    },
    "resources": {
      "type": "object",
      "description": "System resources with capacity limits",
      "patternProperties": {
        "^[a-zA-Z][a-zA-Z0-9_]*$": {
          "type": "object",
          "required": ["capacity"],
          "properties": {
            "capacity": {
              "type": "integer",
              "minimum": 1,
              "description": "Resource capacity (number of parallel servers)"
            },
            "preemptive": {
              "type": "boolean",
              "default": false,
              "description": "Whether this resource supports preemption by priority"
            },
            "queue_discipline": {
              "enum": ["FIFO", "LIFO", "priority"],
              "default": "FIFO",
              "description": "Queue ordering discipline"
            }
          },
          "additionalProperties": false
        }
      },
      "examples": [
        {
          "reception": {"capacity": 2, "queue_discipline": "FIFO"},
          "service": {"capacity": 3, "preemptive": true, "queue_discipline": "priority"},
          "checkout": {"capacity": 1}
        }
      ]
    },
    "processing_rules": {
      "type": "object",
      "description": "Entity processing flow and service times",
      "required": ["steps"],
      "properties": {
        "steps": {
          "type": "array",
          "items": {"type": "string"},
          "minItems": 1,
          "description": "Ordered list of processing steps (resource names)"
        }
      },
      "patternProperties": {
        "^[a-zA-Z][a-zA-Z0-9_]*$": {
          "type": "object",
          "properties": {
            "distribution": {
              "type": "string",
              "pattern": "^(uniform|normal|gauss|exp)\\s*\\(\\s*[0-9.]+\\s*(,\\s*[0-9.]+\\s*)?\\)$",
              "description": "Service time distribution",
              "examples": ["uniform(5, 10)", "normal(8, 2)", "exp(0.2)"]
            },
            "conditional_distributions": {
              "type": "object",
              "description": "Different service times based on entity attributes",
              "patternProperties": {
                "^[a-zA-Z][a-zA-Z0-9_]*$": {
                  "type": "string",
                  "pattern": "^(uniform|normal|gauss|exp)\\s*\\(\\s*[0-9.]+\\s*(,\\s*[0-9.]+\\s*)?\\)$"
                }
              },
              "examples": [
                {"vip_customer": "uniform(3, 5)", "regular_customer": "uniform(8, 12)"}
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "examples": [
        {
          "steps": ["reception", "service", "checkout"],
          "reception": {"distribution": "uniform(1, 3)"},
          "service": {
            "distribution": "normal(10, 2)",
            "conditional_distributions": {
              "vip_customer": "normal(5, 1)",
              "regular_customer": "normal(10, 2)"
            }
          },
          "checkout": {"distribution": "uniform(2, 5)"}
        }
      ]
    },
    "balking_rules": {
      "type": "object",
      "description": "Rules for entities leaving without service",
      "patternProperties": {
        "^[a-zA-Z][a-zA-Z0-9_]*$": {
          "type": "object",
          "properties": {
            "type": {
              "enum": ["queue_length", "wait_time", "probability"],
              "description": "Type of balking condition"
            },
            "resource": {
              "type": "string",
              "description": "Resource to check (for queue_length and wait_time)"
            },
            "max_length": {
              "type": "integer",
              "minimum": 0,
              "description": "Maximum queue length before balking"
            },
            "max_wait": {
              "type": "number",
              "minimum": 0,
              "description": "Maximum wait time before balking"
            },
            "probability": {
              "type": "number",
              "minimum": 0,
              "maximum": 1,
              "description": "Base probability of balking on arrival"
            },
            "priority_multipliers": {
              "type": "object",
              "description": "Balking probability multipliers by priority (lower priority = more likely to balk)",
              "patternProperties": {
                "^[1-9]|10$": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 5
                }
              }
            }
          },
          "required": ["type"],
          "additionalProperties": false
        }
      },
      "examples": [
        {
          "overcrowding": {
            "type": "queue_length",
            "resource": "service",
            "max_length": 8
          },
          "impatience": {
            "type": "probability", 
            "probability": 0.05,
            "priority_multipliers": {"8": 2.0, "9": 3.0, "10": 5.0}
          }
        }
      ]
    },
    "reneging_rules": {
      "type": "object",
      "description": "Rules for entities abandoning queues after waiting (SimPy native support)",
      "patternProperties": {
        "^[a-zA-Z][a-zA-Z0-9_]*$": {
          "type": "object",
          "properties": {
            "abandon_time": {
              "type": "string",
              "pattern": "^(uniform|normal|gauss|exp)\\s*\\(\\s*[0-9.]+\\s*(,\\s*[0-9.]+\\s*)?\\)$",
              "description": "Time distribution after which entities abandon"
            },
            "priority_multipliers": {
              "type": "object",
              "description": "Patience multipliers by priority (higher priority = more patient)",
              "patternProperties": {
                "^[1-9]|10$": {
                  "type": "number",
                  "minimum": 0.1,
                  "maximum": 10
                }
              }
            }
          },
          "required": ["abandon_time"],
          "additionalProperties": false
        }
      },
      "examples": [
        {
          "customer_impatience": {
            "abandon_time": "normal(30, 10)",
            "priority_multipliers": {"1": 5.0, "2": 3.0, "8": 0.5, "9": 0.3, "10": 0.1}
          }
        }
      ]
    },
    "arrival_pattern": {
      "type": "object",
      "description": "How entities arrive in the system",
      "properties": {
        "distribution": {
          "type": "string",
          "pattern": "^(uniform|normal|gauss|exp)\\s*\\(\\s*[0-9.]+\\s*(,\\s*[0-9.]+\\s*)?\\)$",
          "description": "Inter-arrival time distribution",
          "examples": ["exp(0.2)", "uniform(2, 8)", "normal(5, 1)"]
        }
      },
      "required": ["distribution"],
      "additionalProperties": false
    },
    "simple_routing": {
      "type": "object",
      "description": "Basic conditional routing based on entity attributes",
      "patternProperties": {
        "^[a-zA-Z][a-zA-Z0-9_]*$": {
          "type": "object",
          "properties": {
            "conditions": {
              "type": "array",
              "description": "Simple if-then routing rules",
              "items": {
                "type": "object",
                "required": ["attribute", "value", "destination"],
                "properties": {
                  "attribute": {
                    "type": "string",
                    "description": "Entity attribute to check"
                  },
                  "operator": {
                    "enum": ["==", "!=", ">", "<", ">=", "<="],
                    "default": "==",
                    "description": "Comparison operator"
                  },
                  "value": {
                    "oneOf": [
                      {"type": "string"},
                      {"type": "number"},
                      {"type": "boolean"}
                    ],
                    "description": "Value to compare against"
                  },
                  "destination": {
                    "type": "string",
                    "description": "Resource to route to if condition matches"
                  }
                }
              }
            },
            "default_destination": {
              "type": "string",
              "description": "Default resource if no conditions match"
            }
          },
          "required": ["conditions"],
          "additionalProperties": false
        }
      },
      "examples": [
        {
          "priority_routing": {
            "conditions": [
              {"attribute": "priority", "operator": "<=", "value": 2, "destination": "express_service"},
              {"attribute": "priority", "operator": ">", "value": 7, "destination": "slow_service"}
            ],
            "default_destination": "regular_service"
          }
        }
      ]
    },
    "basic_failures": {
      "type": "object",
      "description": "Simple resource failure and repair cycles",
      "patternProperties": {
        "^[a-zA-Z][a-zA-Z0-9_]*$": {
          "type": "object",
          "properties": {
            "mtbf": {
              "type": "string",
              "pattern": "^(uniform|normal|gauss|exp)\\s*\\(\\s*[0-9.]+\\s*(,\\s*[0-9.]+\\s*)?\\)$",
              "description": "Mean time between failures"
            },
            "repair_time": {
              "type": "string", 
              "pattern": "^(uniform|normal|gauss|exp)\\s*\\(\\s*[0-9.]+\\s*(,\\s*[0-9.]+\\s*)?\\)$",
              "description": "Time to repair"
            }
          },
          "required": ["mtbf", "repair_time"],
          "additionalProperties": false
        }
      },
      "examples": [
        {
          "machine_a": {
            "mtbf": "exp(480)",
            "repair_time": "normal(60, 15)"
          }
        }
      ]
    },
    "metrics": {
      "type": "object",
      "description": "Custom names for simulation metrics",
      "properties": {
        "arrival_metric": {
          "type": "string",
          "default": "entities_arrived",
          "examples": ["customers_arrived", "patients_arrived", "orders_received"]
        },
        "served_metric": {
          "type": "string",
          "default": "entities_served", 
          "examples": ["customers_served", "patients_treated", "orders_completed"]
        },
        "balk_metric": {
          "type": "string",
          "default": "entities_balked",
          "examples": ["customers_left", "patients_left", "orders_cancelled"]
        },
        "reneged_metric": {
          "type": "string",
          "default": "entities_reneged",
          "examples": ["customers_abandoned", "patients_left_queue"]
        },
        "value_metric": {
          "type": "string",
          "default": "total_value",
          "examples": ["total_revenue", "total_cost", "total_profit"]
        }
      },
      "additionalProperties": false
    },
    "statistics": {
      "type": "object",
      "description": "Additional statistics to collect",
      "properties": {
        "collect_wait_times": {
          "type": "boolean",
          "default": true,
          "description": "Collect detailed wait time statistics"
        },
        "collect_queue_lengths": {
          "type": "boolean",
          "default": false,
          "description": "Collect queue length over time"
        },
        "collect_utilization": {
          "type": "boolean",
          "default": true,
          "description": "Collect resource utilization statistics"
        },
        "warmup_period": {
          "type": "number",
          "minimum": 0,
          "default": 0,
          "description": "Time to exclude from statistics (steady-state analysis)"
        }
      },
      "additionalProperties": false
    }
  },
  "examples": [
    {
      "title": "Basic Coffee Shop",
      "description": "Simple coffee shop with balking and basic priority",
      "run_time": 480,
      "num_entities": 200,
      "entity_types": {
        "regular_customer": {
          "probability": 0.7,
          "value": {"min": 3, "max": 6},
          "priority": 5
        },
        "vip_customer": {
          "probability": 0.25,
          "value": {"min": 5, "max": 12},
          "priority": 2
        },
        "staff_order": {
          "probability": 0.05,
          "value": {"min": 0, "max": 2},
          "priority": 1
        }
      },
      "resources": {
        "barista": {
          "capacity": 1,
          "preemptive": false,
          "queue_discipline": "priority"
        }
      },
      "processing_rules": {
        "steps": ["barista"],
        "barista": {
          "distribution": "normal(5, 1)",
          "conditional_distributions": {
            "vip_customer": "normal(4, 0.5)",
            "staff_order": "uniform(1, 2)"
          }
        }
      },
      "balking_rules": {
        "overcrowding": {
          "type": "queue_length",
          "resource": "barista",
          "max_length": 5,
          "priority_multipliers": {"1": 0.1, "2": 0.3, "5": 1.0}
        }
      },
      "reneging_rules": {
        "impatience": {
          "abandon_time": "normal(15, 5)",
          "priority_multipliers": {"1": 10.0, "2": 3.0, "5": 1.0}
        }
      },
      "arrival_pattern": {
        "distribution": "uniform(1, 5)"
      },
      "metrics": {
        "arrival_metric": "customers_arrived",
        "served_metric": "customers_served",
        "balk_metric": "customers_balked",
        "reneged_metric": "customers_left_queue",
        "value_metric": "total_revenue"
      },
      "statistics": {
        "collect_wait_times": true,
        "collect_utilization": true,
        "warmup_period": 60
      }
    },
    {
      "title": "Hospital Triage System",
      "description": "Hospital with priority-based triage and multiple treatment stages",
      "run_time": 720,
      "num_entities": 300,
      "entity_types": {
        "emergency": {
          "probability": 0.1,
          "value": {"min": 2000, "max": 5000},
          "priority": 1,
          "attributes": {"severity": "critical", "insurance": "premium"}
        },
        "urgent": {
          "probability": 0.3,
          "value": {"min": 500, "max": 2000},
          "priority": 3,
          "attributes": {"severity": "moderate", "insurance": "standard"}
        },
        "routine": {
          "probability": 0.6,
          "value": {"min": 100, "max": 500},
          "priority": 7,
          "attributes": {"severity": "minor", "insurance": "basic"}
        }
      },
      "resources": {
        "triage": {
          "capacity": 2,
          "queue_discipline": "priority"
        },
        "emergency_bay": {
          "capacity": 3,
          "preemptive": true,
          "queue_discipline": "priority"
        },
        "regular_treatment": {
          "capacity": 5,
          "queue_discipline": "priority"
        },
        "discharge": {
          "capacity": 1,
          "queue_discipline": "FIFO"
        }
      },
      "simple_routing": {
        "after_triage": {
          "conditions": [
            {"attribute": "priority", "operator": "<=", "value": 2, "destination": "emergency_bay"}
          ],
          "default_destination": "regular_treatment"
        }
      },
      "processing_rules": {
        "steps": ["triage", "treatment", "discharge"],
        "triage": {"distribution": "uniform(5, 15)"},
        "emergency_bay": {"distribution": "normal(60, 20)"},
        "regular_treatment": {"distribution": "normal(30, 10)"},
        "discharge": {"distribution": "uniform(5, 10)"}
      },
      "balking_rules": {
        "overcrowding": {
          "type": "queue_length",
          "resource": "triage",
          "max_length": 12,
          "priority_multipliers": {"1": 0.0, "3": 0.2, "7": 1.0}
        }
      },
      "reneging_rules": {
        "patient_patience": {
          "abandon_time": "normal(45, 15)",
          "priority_multipliers": {"1": 20.0, "3": 3.0, "7": 1.0}
        }
      },
      "arrival_pattern": {
        "distribution": "exp(2)"
      },
      "basic_failures": {
        "emergency_bay": {
          "mtbf": "exp(360)",
          "repair_time": "uniform(20, 40)"
        }
      },
      "metrics": {
        "arrival_metric": "patients_arrived",
        "served_metric": "patients_treated",
        "balk_metric": "patients_left_immediately",
        "reneged_metric": "patients_left_queue",
        "value_metric": "total_treatment_cost"
      },
      "statistics": {
        "collect_wait_times": true,
        "collect_queue_lengths": true,
        "collect_utilization": true,
        "warmup_period": 120
      }
    }
  ],
  "additionalProperties": false
}
