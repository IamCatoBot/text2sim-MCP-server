{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://text2sim.com/schemas/des-config.json",
  "title": "Discrete-Event Simulation Configuration",
  "description": "Complete configuration for running discrete-event simulations with SimPy",
  "type": "object",
  "required": ["run_time"],
  "properties": {
    "run_time": {
      "type": "number",
      "description": "Total simulation runtime (in time units, e.g., minutes, hours)",
      "minimum": 0.1,
      "examples": [480, 120, 60]
    },
    "num_entities": {
      "type": "integer",
      "description": "Total number of entities to generate during simulation",
      "minimum": 1,
      "maximum": 10000,
      "default": 100,
      "examples": [50, 100, 200, 500]
    },
    "entity_types": {
      "type": "object",
      "description": "Different types of entities with their characteristics",
      "minProperties": 1,
      "patternProperties": {
        "^[a-zA-Z][a-zA-Z0-9_]*$": {
          "type": "object",
          "required": ["probability"],
          "properties": {
            "probability": {
              "type": "number",
              "description": "Probability of this entity type (0.0 to 1.0)",
              "minimum": 0,
              "maximum": 1,
              "examples": [0.7, 0.25, 0.05]
            },
            "value": {
              "description": "Economic value or cost associated with this entity",
              "oneOf": [
                {
                  "type": "object",
                  "description": "Variable value with range",
                  "properties": {
                    "min": {
                      "type": "number",
                      "description": "Minimum value"
                    },
                    "max": {
                      "type": "number",
                      "description": "Maximum value"
                    }
                  },
                  "required": ["min", "max"],
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "description": "Fixed value",
                  "properties": {
                    "fixed": {
                      "type": "number",
                      "description": "Fixed value for all entities of this type"
                    }
                  },
                  "required": ["fixed"],
                  "additionalProperties": false
                }
              ]
            },
            "attributes": {
              "type": "object",
              "description": "Additional custom attributes for this entity type",
              "patternProperties": {
                "^[a-zA-Z][a-zA-Z0-9_]*$": {
                  "oneOf": [
                    {"type": "string"},
                    {"type": "number"},
                    {"type": "boolean"}
                  ]
                }
              }
            }
          },
          "additionalProperties": false
        }
      },
      "examples": [
        {
          "regular_customer": {
            "probability": 0.7,
            "value": {"min": 20, "max": 100}
          },
          "vip_customer": {
            "probability": 0.3,
            "value": {"min": 100, "max": 500}
          }
        }
      ]
    },
    "resources": {
      "type": "object",
      "description": "System resources that process entities (servers, machines, staff)",
      "minProperties": 1,
      "patternProperties": {
        "^[a-zA-Z][a-zA-Z0-9_]*$": {
          "type": "object",
          "properties": {
            "capacity": {
              "type": "integer",
              "description": "Number of entities this resource can handle simultaneously",
              "minimum": 1,
              "maximum": 100,
              "default": 1,
              "examples": [1, 2, 5, 10]
            },
            "description": {
              "type": "string",
              "description": "Human-readable description of this resource"
            }
          },
          "additionalProperties": false
        }
      },
      "examples": [
        {
          "reception": {"capacity": 2},
          "doctor": {"capacity": 3},
          "checkout": {"capacity": 1}
        }
      ]
    },
    "processing_rules": {
      "type": "object",
      "description": "How entities flow through resources and processing times",
      "properties": {
        "steps": {
          "type": "array",
          "description": "Ordered sequence of resources entities must visit",
          "items": {
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$"
          },
          "minItems": 1,
          "uniqueItems": true,
          "examples": [
            ["reception", "doctor", "checkout"],
            ["assembly", "quality_control", "packaging"]
          ]
        }
      },
      "patternProperties": {
        "^[a-zA-Z][a-zA-Z0-9_]*$": {
          "type": "object",
          "properties": {
            "distribution": {
              "type": "string",
              "description": "Processing time distribution",
              "pattern": "^(uniform|normal|gauss|exp)\\s*\\(\\s*[0-9.]+\\s*(,\\s*[0-9.]+\\s*)?\\)$",
              "examples": [
                "uniform(2, 8)",
                "normal(5, 1.5)",
                "exp(3)"
              ]
            },
            "description": {
              "type": "string",
              "description": "Description of what happens at this step"
            }
          },
          "additionalProperties": false
        }
      },
      "required": ["steps"]
    },
    "balking_rules": {
      "type": "object",
      "description": "Conditions under which entities leave without being served",
      "patternProperties": {
        "^[a-zA-Z][a-zA-Z0-9_]*$": {
          "type": "object",
          "required": ["type"],
          "properties": {
            "type": {
              "type": "string",
              "enum": ["queue_length", "probability", "time_based"],
              "description": "Type of balking rule"
            },
            "resource": {
              "type": "string",
              "description": "Resource to monitor for balking conditions"
            },
            "max_length": {
              "type": "integer",
              "description": "Maximum queue length before entities balk",
              "minimum": 0,
              "examples": [5, 10, 15]
            },
            "probability": {
              "type": "number",
              "description": "Probability of balking on arrival",
              "minimum": 0,
              "maximum": 1,
              "examples": [0.1, 0.05, 0.2]
            },
            "max_wait_time": {
              "type": "number",
              "description": "Maximum time to wait before balking",
              "minimum": 0,
              "examples": [10, 30, 60]
            },
            "description": {
              "type": "string",
              "description": "Human-readable description of this balking rule"
            }
          },
          "allOf": [
            {
              "if": {"properties": {"type": {"const": "queue_length"}}},
              "then": {"required": ["resource", "max_length"]}
            },
            {
              "if": {"properties": {"type": {"const": "probability"}}},
              "then": {"required": ["probability"]}
            },
            {
              "if": {"properties": {"type": {"const": "time_based"}}},
              "then": {"required": ["max_wait_time"]}
            }
          ],
          "additionalProperties": false
        }
      },
      "examples": [
        {
          "impatient_customers": {
            "type": "queue_length",
            "resource": "checkout",
            "max_length": 5
          }
        }
      ]
    },
    "arrival_pattern": {
      "type": "object",
      "description": "How entities arrive over time",
      "properties": {
        "distribution": {
          "type": "string",
          "description": "Time distribution between arrivals",
          "pattern": "^(uniform|normal|gauss|exp)\\s*\\(\\s*[0-9.]+\\s*(,\\s*[0-9.]+\\s*)?\\)$",
          "default": "exp(3)",
          "examples": [
            "uniform(1, 5)",
            "exp(2)",
            "normal(3, 0.5)"
          ]
        }
      },
      "additionalProperties": false
    },
    "metrics": {
      "type": "object",
      "description": "Custom names for simulation metrics",
      "properties": {
        "arrival_metric": {
          "type": "string",
          "description": "Name for counting arrived entities",
          "default": "entities_arrived",
          "examples": ["customers_arrived", "patients_arrived", "orders_received"]
        },
        "served_metric": {
          "type": "string", 
          "description": "Name for counting successfully served entities",
          "default": "entities_served",
          "examples": ["customers_served", "patients_treated", "orders_completed"]
        },
        "balk_metric": {
          "type": "string",
          "description": "Name for counting entities that left without service",
          "default": "entities_balked",
          "examples": ["customers_left", "patients_left", "orders_cancelled"]
        },
        "value_metric": {
          "type": "string",
          "description": "Name for total value/revenue metric",
          "default": "total_value",
          "examples": ["total_revenue", "total_cost", "total_profit"]
        }
      },
      "additionalProperties": false
    }
  },
  "examples": [
    {
      "run_time": 480,
      "num_entities": 200,
      "entity_types": {
        "regular_customer": {
          "probability": 0.8,
          "value": {"min": 20, "max": 100}
        },
        "vip_customer": {
          "probability": 0.2,
          "value": {"min": 100, "max": 500}
        }
      },
      "resources": {
        "reception": {"capacity": 2},
        "service": {"capacity": 3},
        "checkout": {"capacity": 1}
      },
      "processing_rules": {
        "steps": ["reception", "service", "checkout"],
        "reception": {"distribution": "uniform(1, 3)"},
        "service": {"distribution": "normal(10, 2)"},
        "checkout": {"distribution": "uniform(2, 5)"}
      },
      "balking_rules": {
        "long_wait": {
          "type": "queue_length",
          "resource": "reception",
          "max_length": 10
        }
      },
      "arrival_pattern": {
        "distribution": "exp(3)"
      },
      "metrics": {
        "arrival_metric": "customers_arrived",
        "served_metric": "customers_served",
        "balk_metric": "customers_left",
        "value_metric": "total_revenue"
      }
    }
  ],
  "additionalProperties": false
}
